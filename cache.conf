proxy_cache_path /data/cache levels=1:2 keys_zone=my_cache:10m max_size=10g 
                 inactive=60m use_temp_path=off;

map $request_method $purge_method {
    PURGE 1;
    default 0;
}

resolver 172.31.0.10 valid=10s;

upstream hello-backend {
        zone hello-backend 64k;
        server hello-service.hello.com:3000 resolve;
        sticky cookie srv_id expires=1h domain=.nginxdemo.com path=/;
}

server {
    listen 80;
    server_name www.nginxdemo.com;
    status_zone wwww.nginxdemo.com_http;
    location / {
        return 302 https://$host$request_uri;
    }
}
server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/hello/default.crt;
    ssl_certificate_key /etc/ssl/hello/default.key;
    server_name www.nginxdemo.com;
    status_zone wwww.nginxdemo.com_https;

    location / {
        proxy_set_header Host $host;
        proxy_pass http://hello-backend;
    }

    location ~* \.(jpeg|js|jpg|png|css)$ {
        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 3;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid any 30m;
        proxy_cache my_cache;
        proxy_set_header Host $host;
        proxy_pass http://hello-backend;
        proxy_cache_purge $purge_method;
    }
    location /socket.io {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_pass http://hello-backend;
    }
}